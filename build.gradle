import java.nio.file.Paths
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
    id 'java-library'
    id 'maven-publish'
}

group 'com.github.deltacv'
version '2.0.0-B'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

sourceSets {
    main {
        resources {
            // include native libs in the output jar
            srcDirs "lib/"
        }
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.openpnp:opencv:4.5.1-2"
    api project(':RobotCore')
}

task(writeBuildClassJava) {
    String date = DateTimeFormatter.ofPattern("yyyy-M-d hh:mm:ss").format(LocalDateTime.now())

    File versionFile = Paths.get(
            projectDir.absolutePath, 'src', 'main', 'java',
            'io', 'github', 'deltacv', 'apriltag', 'Build.java'
    ).toFile()

    versionFile.delete()

    versionFile << "package io.github.deltacv.apriltag;\n" +
            "\n" +
            "/*\n" +
            " * Autogenerated file! Do not manually edit this file, as\n" +
            " * it is regenerated any time the build task is run.\n" +
            " *\n" +
            " * Based from PhotonVision PhotonVersion generator task\n"+
            " */\n" +
            "@SuppressWarnings(\"ALL\")\n" +
            "public final class Build {\n" +
            "    public static final String versionString = \"$version\";\n" +
            "    public static final String buildDate = \"$date\";\n" +
            "}"
}

build.dependsOn writeBuildClassJava